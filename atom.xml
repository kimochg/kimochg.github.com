<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pervade Tech</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.pervade.tech/"/>
  <updated>2017-09-07T00:03:18.000Z</updated>
  <id>https://blog.pervade.tech/</id>
  
  <author>
    <name>Cheng Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Database Relationship</title>
    <link href="https://blog.pervade.tech/2017/09/06/Database-Relationship/"/>
    <id>https://blog.pervade.tech/2017/09/06/Database-Relationship/</id>
    <published>2017-09-06T15:50:56.000Z</published>
    <updated>2017-09-07T00:03:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Assumption"><a href="#Assumption" class="headerlink" title="Assumption"></a>Assumption</h1><ol><li>Person</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rails g model person first_name last_name age:integer</div></pre></td></tr></table></figure><h1 id="One-to-One"><a href="#One-to-One" class="headerlink" title="One-to-One"></a>One-to-One</h1><p><img src="/media/15047418445837.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rails g model personal_info height:float weight:float person:references</div></pre></td></tr></table></figure><ul><li>One person has exactly <code>one</code> personal_info entry</li><li>One personal_info entry <code>belongs</code> to exactly one person</li><li>The <strong><em>belongs to</em></strong> side is the one with a <code>foreign key</code></li></ul><p><strong>Convention</strong>: Default name for the foreign key is <code>#{master_table_singular}_id</code>, e.g. person_id</p><h2 id="Relationship-in-model"><a href="#Relationship-in-model" class="headerlink" title="Relationship in model"></a>Relationship in model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PersonalInfo</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:person</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment"># personal_info.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><h2 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h2><h3 id="Orphaned-associations-dependent"><a href="#Orphaned-associations-dependent" class="headerlink" title="Orphaned associations - dependent"></a>Orphaned associations - dependent</h3><ol><li><code>:delete</code> - remove associated object(s) by issuing a query</li><li><code>:destroy</code> - same as above, but remove the association by calling <code>destroy</code> on it</li><li><code>:nullify</code> - set the foreign key to NULL (leave the associated entity alone - just disassociate)</li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><h2 id="Helper-methods"><a href="#Helper-methods" class="headerlink" title="Helper methods"></a>Helper methods</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">p = Person.find_by first_name: &quot;John&quot;</div><div class="line"></div><div class="line">p.personal_info</div><div class="line">=&gt; nil</div></pre></td></tr></table></figure><p>two way to new personal info for “John”</p><ul><li>create_personal_info</li><li>build_personal_info</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p.create_personal_info height: 170.1, weight: 70.5</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p.build_personal_info height: 170.1, weight: 70.5</div><div class="line">p.save</div></pre></td></tr></table></figure><h2 id="Brief"><a href="#Brief" class="headerlink" title="Brief"></a>Brief</h2><ul><li><code>has_one</code></li><li><code>belongs_to</code></li><li><code>create_personal_info</code></li><li><code>build_personal_info</code></li></ul><h1 id="One-to-Many"><a href="#One-to-Many" class="headerlink" title="One-to-Many"></a>One-to-Many</h1><p><img src="/media/15047419004111.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rails g model job title company position_id person:references</div></pre></td></tr></table></figure><ul><li>One person <code>has one or more</code> jobs</li><li>One job entry <code>belongs to</code> exactly one person</li><li>The <code>belongs to</code> side is the one with a foreign key</li></ul><p><strong>Convention</strong>: Default name for the foreign key is <code>#{master_table_singular}_id</code>, e.g. person_id</p><h2 id="Relationship-in-model-1"><a href="#Relationship-in-model-1" class="headerlink" title="Relationship in model"></a>Relationship in model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment"># job.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Job</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:person</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><h2 id="Options-1"><a href="#Options-1" class="headerlink" title="Options"></a>Options</h2><h3 id="class-name"><a href="#class-name" class="headerlink" title="class_name"></a>class_name</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line">  has_many <span class="symbol">:my_jobs</span>, <span class="symbol">class_name:</span> <span class="string">"Job"</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><p>alias the name and point out the model name</p><h3 id="Orphaned-associations-dependent-1"><a href="#Orphaned-associations-dependent-1" class="headerlink" title="Orphaned associations - dependent"></a>Orphaned associations - dependent</h3><ol><li><code>:delete</code> - remove associated object(s) by issuing a query</li><li><code>:destroy</code> - same as above, but remove the association by calling <code>destroy</code> on it</li><li><code>:nullify</code> - set the foreign key to NULL (leave the associated entity alone - just disassociate)</li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><h2 id="Helper-methods-1"><a href="#Helper-methods-1" class="headerlink" title="Helper methods"></a>Helper methods</h2><h3 id="lt-lt"><a href="#lt-lt" class="headerlink" title="&lt;&lt;"></a>&lt;&lt;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">Job.create company: &quot;MS&quot;, title: &quot;Developer&quot;, position_id: &quot;#1234&quot;</div><div class="line">p1 = Person.first</div><div class="line">p1.jobs</div><div class="line">=&gt; nil</div><div class="line"></div><div class="line">p1.jobs &lt;&lt; Job.first</div><div class="line"></div><div class="line">Job.first.person</div><div class="line">=&gt; #&lt;Person ...</div></pre></td></tr></table></figure><h3 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p1.jobs.clear</div></pre></td></tr></table></figure><p>disassociates jobs from this person by setting foreign key to NULL</p><h3 id="create-and-where-scoped-to-person"><a href="#create-and-where-scoped-to-person" class="headerlink" title="create and where scoped to person!"></a>create and where scoped to person!</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p1.jobs.create [</div><div class="line">  &#123; title: &quot;dev&quot;, company: &quot;MS&quot;, position_id: &quot;#123123&quot; &#125;</div><div class="line">]</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p1.jobs.where(company: &quot;MS&quot;).count</div></pre></td></tr></table></figure><p>remember it is also helpful in migrations</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Person.first.create! [</div><div class="line">]</div></pre></td></tr></table></figure><h2 id="Brief-1"><a href="#Brief-1" class="headerlink" title="Brief"></a>Brief</h2><ul><li><code>has_many</code></li><li><code>belongs_to</code></li><li><code>dependent</code></li><li><code>clear</code></li><li><code>create</code></li><li><code>where</code></li></ul><h1 id="Many-to-Many"><a href="#Many-to-Many" class="headerlink" title="Many-to-Many"></a>Many-to-Many</h1><p><img src="/media/15047419254688.jpg" alt=""></p><ul><li>One person can <code>have many</code> hobbies</li><li>One hobby can be <code>shared by many</code> people</li><li><code>habtm</code> (has_and_belongs_to_many)</li></ul><p>Need to create an extra (a.k.a join) table (without a model, i.e. just a migration)</p><p><strong>Convention</strong>: <strong><em>Plural</em></strong> model names separated by an underscore in <strong><em>alphabetical</em></strong> order</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rails g model hobby name</div><div class="line">rails g migration create_hobbies_people person:references hobby:references</div></pre></td></tr></table></figure><p>Hobbies_People &lt;- plural &amp;&amp; alphabetical order</p><h2 id="Migration-join-table"><a href="#Migration-join-table" class="headerlink" title="Migration - join table"></a>Migration - join table</h2><p>The Many-to-Many associated with <strong>2</strong> model and <strong>3</strong> migrations</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateHobbiesPeople</span> &lt; ActiveRecord::Migration</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></div><div class="line">    create_table <span class="symbol">:hobbies_people</span>, <span class="symbol">id:</span> <span class="literal">false</span> <span class="keyword">do</span> <span class="params">|t|</span></div><div class="line">      t.references <span class="symbol">:person</span>, <span class="symbol">index:</span> <span class="literal">true</span>, <span class="symbol">foreign_key:</span> <span class="literal">true</span></div><div class="line">      t.references <span class="symbol">:hobby</span>, <span class="symbol">index:</span> <span class="literal">true</span>, <span class="symbol">foreign_key:</span> <span class="literal">true</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><p>Since we don’t need primary id in join tables, so set <code>id: false</code></p><h2 id="Relationship-in-model-2"><a href="#Relationship-in-model-2" class="headerlink" title="Relationship in model"></a>Relationship in model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line">  has_and_belongs_to_many <span class="symbol">:hobbies</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># hobby.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hobby</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_and_belongs_to_many <span class="symbol">:people</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><h2 id="Helper-method"><a href="#Helper-method" class="headerlink" title="Helper method"></a>Helper method</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">josh = Person.find_by first_name: &quot;Josh&quot;</div><div class="line">=&gt; #&lt;Person ...</div><div class="line"></div><div class="line">lebron = Person.find_by first_name: &quot;Lebron&quot;</div><div class="line">=&gt; #&lt;Person ...</div><div class="line"></div><div class="line">programming = Hobby.create name: &quot;Programming&quot;</div><div class="line">=&gt; #&lt;Hobby ...</div><div class="line"></div><div class="line">josh.hobbies &lt;&lt; programming; lebron.hobbies &lt;&lt; programming</div><div class="line"></div><div class="line">programming.people</div><div class="line">=&gt; # ... Collection [ ... josh and lebron ... ]</div></pre></td></tr></table></figure><h2 id="Brief-2"><a href="#Brief-2" class="headerlink" title="Brief"></a>Brief</h2><ul><li><code>has_and_belongs_to</code></li><li>2 model and 3 migrations, join table only exists in the DB, but not in Ruby code</li></ul><h1 id="Rich-Many-to-Many"><a href="#Rich-Many-to-Many" class="headerlink" title="Rich Many-to-Many"></a>Rich Many-to-Many</h1><p><img src="/media/15047419465451.jpg" alt=""></p><ul><li>keep some data on the join table</li><li><code>grandchild</code> relationship on a model, user -&gt; articles -&gt; comments</li><li>in our case, all salary ranges for a particular person</li></ul><h2 id="Basic-Idea"><a href="#Basic-Idea" class="headerlink" title="Basic Idea"></a>Basic Idea</h2><p>you first <code>create</code> and <code>regular</code> parent-child relationship and then <code>use the child model as a join</code> between the parent and grandchild</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rails g model salary_range min_salary:float max_salary:float job:references</div><div class="line"></div><div class="line">rake db:migrate</div></pre></td></tr></table></figure><h2 id="Relationship-in-model-3"><a href="#Relationship-in-model-3" class="headerlink" title="Relationship in model"></a>Relationship in model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># job.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Job</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:person</span></div><div class="line">  has_one <span class="symbol">:salary_range</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment"># salary_range.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SalaryRange</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:job</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><p><code>person</code> is grandparent to <code>salary_range</code></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line">  has_and_belongs_to_many <span class="symbol">:hobbies</span></div><div class="line">  has_many <span class="symbol">:approx_salary</span>, <span class="symbol">through:</span> <span class="symbol">:jobs</span>, <span class="symbol">source:</span> <span class="symbol">:salary_range</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><h2 id="Helper-methods-2"><a href="#Helper-methods-2" class="headerlink" title="Helper methods"></a>Helper methods</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">lebron = Person.find_by(first_name: &quot;LeBron&quot;)</div><div class="line">=&gt; #&lt;Person ...</div><div class="line"></div><div class="line">lebron.jobs.count</div><div class="line">=&gt; 2</div><div class="line"></div><div class="line">lebron.jobs.pluck(:id)</div><div class="line">=&gt; [12, 13]</div><div class="line"></div><div class="line">Job.find(12).create_salary_range(min_salary: 10000.00, max_salary: 20000.00)</div><div class="line">=&gt; #&lt;SalaryRange id: 1 ...</div><div class="line"></div><div class="line">Job.find(13).create_salary_range(min_salary: 15000.00, max_salary: 35000.00)</div><div class="line">=&gt; #&lt;SalaryRange id: 2 ...</div><div class="line"></div><div class="line">lebron.approx_salaries</div><div class="line">=&gt; ... Collection ... [ #&lt;SalaryRange id: 1 ... , #&lt;SalaryRange id: 2 ... ]</div></pre></td></tr></table></figure><h3 id="Calculations"><a href="#Calculations" class="headerlink" title="Calculations"></a>Calculations</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line">  has_and_belongs_to_many <span class="symbol">:hobbies</span></div><div class="line">  has_many <span class="symbol">:approx_salaries</span>, <span class="symbol">through:</span> <span class="symbol">:jobs</span>, <span class="symbol">source:</span> <span class="symbol">:salary_range</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">max_salary</span></span></div><div class="line">    approx_salaries.maximum(<span class="symbol">:max_salary</span>)</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">lebron = Person.find_by first_name: &quot;Lebron&quot;</div><div class="line"></div><div class="line">lebron.max_salary</div><div class="line">=&gt; 350000.00</div></pre></td></tr></table></figure><p>More infos on <a href="http://api.rubyonrails.org/classes/ActiveRecord/Calculations.html" target="_blank" rel="external">http://api.rubyonrails.org/classes/ActiveRecord/Calculations.html</a></p><h1 id="Brief-3"><a href="#Brief-3" class="headerlink" title="Brief"></a>Brief</h1><ul><li><code>though</code></li><li><code>source</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Assumption&quot;&gt;&lt;a href=&quot;#Assumption&quot; class=&quot;headerlink&quot; title=&quot;Assumption&quot;&gt;&lt;/a&gt;Assumption&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Person&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=
      
    
    </summary>
    
      <category term="Rails" scheme="https://blog.pervade.tech/categories/Rails/"/>
    
    
      <category term="Note" scheme="https://blog.pervade.tech/tags/Note/"/>
    
      <category term="Rails" scheme="https://blog.pervade.tech/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="https://blog.pervade.tech/2017/09/06/hello-world/"/>
    <id>https://blog.pervade.tech/2017/09/06/hello-world/</id>
    <published>2017-09-06T09:01:08.000Z</published>
    <updated>2017-09-06T09:02:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Awesome! This is my first article in Hexo !</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Awesome! This is my first article in Hexo !&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Responsive Image</title>
    <link href="https://blog.pervade.tech/2017/03/23/Responsive-Image/"/>
    <id>https://blog.pervade.tech/2017/03/23/Responsive-Image/</id>
    <published>2017-03-23T02:23:00.000Z</published>
    <updated>2017-09-07T02:30:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h1><p>high-res devices can get the optimum image for a given resolution, while low-resolution devices can avoid wasting time and bandwidth downloading overly-large files.</p><p>img</p><ul><li>fixed width, single density web page</li><li>small difference in file size</li><li>SVG, vector-based image</li></ul><p><img src="/media/15047511251362.jpg" alt=""></p><h1 id="Use-Case-Resolution-Switch"><a href="#Use-Case-Resolution-Switch" class="headerlink" title="Use Case: Resolution Switch"></a>Use Case: Resolution Switch</h1><p>Resolution switching is the most common use case. It refers to any scenario where you all you want to do is provide different sizes of an image and you’re not making any modifications to the content or aspect ratio of the image.</p><p><img src="/media/15047511666151.jpg" alt=""></p><h2 id="Attribute-srcset"><a href="#Attribute-srcset" class="headerlink" title="Attribute: srcset"></a>Attribute: srcset</h2><h3 id="Display-Density-Descriptors"><a href="#Display-Density-Descriptors" class="headerlink" title="Display Density Descriptors"></a>Display Density Descriptors</h3><p><img src="/media/15047511772943.jpg" alt=""></p><h3 id="Width-Descriptors"><a href="#Width-Descriptors" class="headerlink" title="Width Descriptors"></a>Width Descriptors</h3><p><img src="/media/15047511881117.jpg" alt=""></p><h2 id="Attribute-sizes"><a href="#Attribute-sizes" class="headerlink" title="Attribute: sizes"></a>Attribute: sizes</h2><p>image begin downloading before CSS and JS files downloaded completely, so browser only get viewport at that time</p><p><img src="/media/15047511987323.jpg" alt=""></p><h3 id="Media-Condition"><a href="#Media-Condition" class="headerlink" title="Media Condition"></a>Media Condition</h3><p><code>@media screen</code> can not used</p><p>mostly<br><code>(max-width: 480px)</code> and <code>(min-width: 480px)</code></p><h3 id="Lengths"><a href="#Lengths" class="headerlink" title="Lengths"></a>Lengths</h3><p>vw = viewport width</p><p>100vw = 100% viewport width</p><p>support absolute and relative length, even CSS calc()</p><h3 id="Make-browser-be-smart"><a href="#Make-browser-be-smart" class="headerlink" title="Make browser be smart"></a>Make browser be smart</h3><p>until now, what we done, give more attribute to <code>&lt;img&gt;</code>, is a suggestion to browser, and then make it be smarter to choose better image size</p><p><img src="/media/15047512087785.jpg" alt=""></p><h1 id="Use-Case-Art-Direction"><a href="#Use-Case-Art-Direction" class="headerlink" title="Use Case: Art Direction"></a>Use Case: Art Direction</h1><p>image have gravity, when saw in small screen device, not whole image resize, just crop the meaningful part from image.</p><p><a href="https://cloudfour.com/examples/img-currentsrc/" target="_blank" rel="external">Image Current Src Demo</a></p><p><img src="/media/15047512167536.jpg" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">"homepage-person@desktop.png, homepage-person@desktop-2x.png 2x"</span>       </span></div><div class="line"><span class="tag">          <span class="attr">media</span>=<span class="string">"(min-width: 990px)"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">"homepage-person@tablet.png, homepage-person@tablet-2x.png 2x"</span> </span></div><div class="line"><span class="tag">          <span class="attr">media</span>=<span class="string">"(min-width: 750px)"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">srcset</span>=<span class="string">"homepage-person@mobile.png, homepage-person@mobile-2x.png 2x"</span> </span></div><div class="line"><span class="tag">       <span class="attr">alt</span>=<span class="string">"Shopify Merchant, Corrine Anestopoulos"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></div></pre></td></tr></table></figure><p>here, <code>media</code> attribute is a directive to browser rather than a suggestion.</p><h2 id="Attribute-type"><a href="#Attribute-type" class="headerlink" title="Attribute: type"></a>Attribute: type</h2><p>The browser will pick the first source where the declared image type is one that it supports. If it doesn’t recognize any of the source types, it will use the <img> element’s src or srcset declarations.</p><p><img src="/media/15047512263209.jpg" alt=""></p><h1 id="Conclusions"><a href="#Conclusions" class="headerlink" title="Conclusions"></a>Conclusions</h1><ul><li>Most images on the web fit the resolution switching use case.</li><li>When you’ve got a resolution switching use case, you want to empower the browser to make the best choice possible. This is what srcset is designed to do.</li><li>When you use the <picture> element with media attributes, you’re dictating to the browser what images it should use.</picture></li><li>Therefore, you can and should use <picture> when you want both resolution switching and to support multiple image formats. Just leave off the media attribute so that the browser can do its thing.</picture></li></ul><h1 id="Other-stuff"><a href="#Other-stuff" class="headerlink" title="Other stuff"></a>Other stuff</h1><h2 id="img-fallback-of-SVG"><a href="#img-fallback-of-SVG" class="headerlink" title="img fallback of SVG"></a>img fallback of SVG</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;logo.svg&quot; onerror=&quot;this.src=logo-fallback.png;this.onerror=null;&quot; /&gt;</div></pre></td></tr></table></figure><h2 id="picture-of-SVG"><a href="#picture-of-SVG" class="headerlink" title="picture of SVG"></a>picture of SVG</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;picture&gt;</div><div class="line">    &lt;source type=&quot;image/svg+xml&quot; srcset=&quot;path/to/logo.svg&quot;&gt;</div><div class="line">    &lt;img src=&quot;path/to/logo-1x.png&quot; srcset=&quot;path/to/logo-2x.png 2x, path/to/logo-3x.png 3x&quot; alt=&quot;Logo description&quot;&gt;</div><div class="line">&lt;/picture&gt;</div></pre></td></tr></table></figure><h1 id="Responsive-image-in-CSS"><a href="#Responsive-image-in-CSS" class="headerlink" title="Responsive image in CSS"></a>Responsive image in CSS</h1><h1 id="image-set"><a href="#image-set" class="headerlink" title="image-set"></a>image-set</h1><p><img src="/media/15047512362925.jpg" alt=""></p><h1 id="Media-query"><a href="#Media-query" class="headerlink" title="Media query"></a>Media query</h1><p><img src="/media/15047512441547.jpg" alt=""></p><h1 id="Break-points"><a href="#Break-points" class="headerlink" title="Break points"></a>Break points</h1><p><img src="/media/15047512522102.jpg" alt=""></p><p>Instead of spacing out breakpoints evenly, we should have more breakpoints as the image gets larger.</p><h1 id="Processing-Responsive-Image"><a href="#Processing-Responsive-Image" class="headerlink" title="Processing Responsive Image"></a>Processing Responsive Image</h1><ul><li>Where possible, use resolution independent SVG images.</li><li>When creating or modifying the design of templates, the template author provides the sizes attribute for the various images in the template.</li><li>The srcset attribute with width descriptors is inserted by the server which does all of the heavy lifting of figuring out what image breakpoints to choose for each image.</li><li>Content authors never worry about any of this. Their only responsibility is to upload the highest quality source available and let the image resizing service take care of the rest.</li></ul><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><ul><li><strong><a href="https://cloudfour.com/thinks/responsive-images-101-definitions/" target="_blank" rel="external">Responsive Images 101</a></strong></li><li><strong><a href="https://github.com/aFarkas/lazysizes" target="_blank" rel="external">lazysizes</a></strong></li><li><strong><a href="https://dev.opera.com/articles/native-responsive-images/" target="_blank" rel="external">native responsive image</a></strong></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering" target="_blank" rel="external">image-rendering CSS property</a></li><li><a href="https://www.paintcodeapp.com/news/iphone-6-screens-demystified" target="_blank" rel="external">Iphone 6P downsampling</a></li><li><a href="https://sarasoueidan.com/blog/svg-picture/" target="_blank" rel="external">Better SVG Fallback and Art Direction With The <picture> Element</picture></a></li><li><a href="http://www.responsivebreakpoints.com/" target="_blank" rel="external">BreakingPoint Generator</a></li><li><a href="http://caniuse.com/#feat=devicepixelratio" target="_blank" rel="external">Window.devicePixelRatio</a></li><li><a href="http://cloudinary.com/documentation/image_transformation_reference" target="_blank" rel="external">Cloudinary Image Transformation reference</a></li><li><a href="http://cloudinary.com/documentation/responsive_images" target="_blank" rel="external">Cloudinary BreakingPoint Generator</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Purpose&quot;&gt;&lt;a href=&quot;#Purpose&quot; class=&quot;headerlink&quot; title=&quot;Purpose&quot;&gt;&lt;/a&gt;Purpose&lt;/h1&gt;&lt;p&gt;high-res devices can get the optimum image for a g
      
    
    </summary>
    
      <category term="Image" scheme="https://blog.pervade.tech/categories/Image/"/>
    
    
      <category term="Note" scheme="https://blog.pervade.tech/tags/Note/"/>
    
      <category term="image" scheme="https://blog.pervade.tech/tags/image/"/>
    
  </entry>
  
  <entry>
    <title>Grok Vi</title>
    <link href="https://blog.pervade.tech/2017/01/10/Grok-Vi/"/>
    <id>https://blog.pervade.tech/2017/01/10/Grok-Vi/</id>
    <published>2017-01-10T02:36:00.000Z</published>
    <updated>2017-09-07T02:37:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="透悉Vi-Grok-Vi"><a href="#透悉Vi-Grok-Vi" class="headerlink" title="透悉Vi Grok Vi"></a>透悉Vi Grok Vi</h1><h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p>​    现在的代码编辑器层出不穷，好比Sublime，Atom，VScode，WebStorm等等，大多都支持插件扩展。各有各的特色。但是我在这些现代编辑器上装上Vim插件后，体验就良莠不齐了。最终在今天，我在服务器上使用vim对代码进行微调时，让我产生了回归终端vim的心。</p><p>​    vim历经了这么多年的发现，插件层出不穷。各家各人都会自己习惯的配置。在我装完那些vim眼花缭乱的自定义配置后，我根本不知道有哪些功能是我需要的，哪些原生的功能被替代了。</p><p>​    有趣的是，当我下决心自定义vim配置时，我搜索了大量文章，却意外获得了许多vi编辑器的经验，下面一起来感受一下vi/vim时代的强大。</p><h2 id="vi-的禅"><a href="#vi-的禅" class="headerlink" title="vi 的禅"></a>vi 的禅</h2><p>​    多数人在初次使用vim的时候，都会不习惯于<code>dd/yy</code>+ <code>p</code> 之于vim，毕竟我们习惯了<code>ctrl+c</code> 和<code>ctrl+v</code>。 </p><p>​    其实vi 的哲理在于当你在进行编辑操作的时候，就好比陈述，好似人对电脑口述命令。</p><h3 id="动词-Verb"><a href="#动词-Verb" class="headerlink" title="动词 Verb"></a>动词 Verb</h3><p>​        <code>y</code> 就是一个动词，告诉vi我需要coPy。<code>yy</code> 则是<code>yz</code> 的别名，为了方便操作，表示我要复制这一行。类似的，<code>d</code> 也是一个动词，告诉vi我要Delete，<code>dd</code> 则是说我要删除这一行。当然这时候，这一行的数据其实存放到匿名寄存器中，可以看到这个副作用，正好完成了Cut的动作。</p><h3 id="主语-Subject"><a href="#主语-Subject" class="headerlink" title="主语 Subject"></a>主语 Subject</h3><p>​    提到了动词，动词产生一个动作，必定会有主语（实施者）。</p><p>​    举例来说，<code>yW</code> 这句话就表示从当前的位置直到W(下一个整词)进行复制操作。</p><h4 id="寄存器-Register"><a href="#寄存器-Register" class="headerlink" title="寄存器 Register"></a>寄存器 Register</h4><p>​    在vi中的大多数的操作都会被存放在匿名寄存器中。同时，vi也提供了26个用字母命名的寄存器。注意这些寄存器的名字均为英文字母的小写。</p><p>​    使用<code>m</code> 指令来标记寄存器，<code>ma</code> 表示当前位置将被标记并存放在a寄存器中，<code>y&#39;a</code> 则表示从当前位置到a寄存器的标记位置进行复制操作。</p><p>​    单引号<code>&#39;</code> +字母，表示到寄存器标记位置所在的行</p><p>​    反引号`+字母，表示到寄存器的精确标记位置</p><p>​    现在，我们有了主语，有了动词，我们不需要进行宏录制，也能进行许多以前不能进行的操作了。</p><h4 id="段落-Paragraph"><a href="#段落-Paragraph" class="headerlink" title="段落 Paragraph"></a>段落 Paragraph</h4><p>​    现在，我们来了解段落的标记位置。<code>{</code> 和<code>}</code> ，使用后会分别移动到段落前/后的位置。配置前述的动词来构成新的对话。</p><p>​    <code>{</code>  <code>d}</code> 只是用的3个按键就对当前的段落进行了剪切操作。如果你正好在段首，段尾，<code>d{</code> <code>d}</code> 就更方便了。</p><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><p>​    你是否想过，正则表达式也可以作句子的主语。</p><p>​    <code>d/foo</code> <strong>从 当前行 到 下一个含有字符串foo的行</strong> 进行 <strong>剪切</strong></p><p>​    <code>y?bar</code> <strong>从 当前位置 到 下一个含有字符串bar的上一行</strong> 进行 <strong>复制</strong></p><h3 id="宾语-Object"><a href="#宾语-Object" class="headerlink" title="宾语 Object"></a>宾语 Object</h3><p>​    有了主语，动词，就一定会有宾语 Object。</p><h4 id="命名寄存器"><a href="#命名寄存器" class="headerlink" title="命名寄存器"></a>命名寄存器</h4><p>​    26个字母命名的寄存器中的内容，通过加前缀<code>“</code> 来调用，就可以充当宾语。</p><p>​    <code>&quot;add</code> 当前行 剪切到 a寄存器</p><p>​    <code>&quot;by/foo</code> 从 当前位置 到 下一个含有字符串foo的行 复制到 b寄存器</p><p>​    <code>&quot;ap</code> 在下一行 打印 a寄存器的内容</p><p>​    <code>&quot;bP</code> 在上一行 打印 b寄存器的内容</p><h3 id="形容词与副词-Adjective-and-Adverbs"><a href="#形容词与副词-Adjective-and-Adverbs" class="headerlink" title="形容词与副词 Adjective and Adverbs"></a>形容词与副词 Adjective and Adverbs</h3><p>​    <code>3J</code> 对下面3行的内容 进行连接</p><p>​    <code>d5}</code>     从当前行 到 下面5个段落段尾 进行删除</p><hr><h2 id="进阶技巧"><a href="#进阶技巧" class="headerlink" title="进阶技巧"></a>进阶技巧</h2><h2 id="行编辑器"><a href="#行编辑器" class="headerlink" title=": 行编辑器"></a><code>:</code> 行编辑器</h2><p><code>:% s/foo/bar/g</code>    在所有行，出现的所有foo 替换成 bar</p><p>vi出生的年代，大多数终端设备还是teletype(TTY)设备，经常要同过一个简陋的交互界面（通常连接速度在110波特，粗略地说就是 11字符/秒，比一个快速的打印机还慢）对打印出的文本副本进行操作。</p><p>所以，<code>:</code> 是行编辑器的代名词，通常涉及到的都是多行操作，这样就会有一个操作范围。</p><p>例如，<code>:127,215 s/foo/bar</code> 界定了在127到215行，对foo替换成bar的操作。</p><h3 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h3><p>行操作时，<code>.</code> 表示当前行，<code>$</code> 表示最后一行，<code>+</code> 和<code>-</code> 表示相对当前行向后/向前偏移行</p><p>​    <code>:.,$j</code> 当前行到最后一行，进行连接</p><p>​    <code>:%</code> 和<code>:1,$</code> 都表示所有行</p><h3 id="g-和-v"><a href="#g-和-v" class="headerlink" title="g 和 v"></a>g 和 v</h3><p>g - globally</p><p>v - conVerse paper</p><p><code>:… g</code> 代表了后续操作是全局匹配随后的正则（在行界定的范围内）</p><p><code>:… v</code> 表示了后续操作时全局 <strong>不</strong> 匹配随后的正则 （在行界定的范围内）</p><p>举例来说</p><p><code>:.,+21g/foo/d</code> 在当前行到随后的21行内，出现的所有含有 foo 的行都删除</p><p><code>:.,$v/bar/d</code> 在当前行到最后一行内，出现的所有 <strong>不</strong> 含有 bar 的行都删除</p><p>记住，<code>:… v/re/…</code> 是一个很常用的指令</p><h4 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h4><p>grep指令正是受到了 g 的启发，效果和 <code>:g/re/p</code>一样</p><p>grep -v 就跟 <code>:v/re/p</code> 结果相同</p><h2 id="m指令"><a href="#m指令" class="headerlink" title="m指令"></a>m指令</h2><p>​    m在vi中可以用来移动多行，同时配合<code>j</code> 移动后再连接内容。</p><p>下面举例来说：</p><p><code>:% g/foo/m$</code> 将全文中所有含有 foo 的行都移动到了文档末尾</p><p>就好比运行了<code>1G!GGmap!Ggrep foo&lt;ENTER&gt;1G:1, &#39;a g/foo&#39;/d</code> </p><p>复制文档内容到结尾，通过grep指令过滤结尾，然后从头删除所有内容</p><h2 id="j指令-连接空行"><a href="#j指令-连接空行" class="headerlink" title="j指令 连接空行"></a>j指令 连接空行</h2><p>​    通常，我们连接行之前，都需要通过正则来得到要连接的内容，之后使用<code>j</code> 连接到上一行</p><p>​    <code>:%g/^  /-1j</code> 对所有的空行（这边排除了块注释可能用到的 * 行）</p><h2 id="s指令-替换"><a href="#s指令-替换" class="headerlink" title="s指令 替换"></a>s指令 替换</h2><p>​    我们知道<code>:% s/foo/bar/g</code> 可以对所有行中出现的所有foo替换成bar。他也可以和g/v指令配合，甚至和寄存器配合，划定范围。</p><h3 id="配合g-v"><a href="#配合g-v" class="headerlink" title="配合g/v"></a>配合g/v</h3><p><code>:% g/foo/s/bar/zzz/g</code> 所有含有foo的行中，对所有bar替换成zzz</p><p>这种操作方便非常便捷，完整。</p><p>​    同样地，如果使用类似<code>:%s/\(.* foo.*\ )bar\ ( . * \ )/\1zzz\2/g</code>不仅冗长，而且只能替换foo出现后的bar，并不能得到我们想要的结果  </p><h3 id="配合寄存器"><a href="#配合寄存器" class="headerlink" title="配合寄存器"></a>配合寄存器</h3><p><code>:&#39;a,&#39;b g/foo/j</code> 在a，b寄存器中间的行，都会连接到其下一行</p><h2 id="r指令"><a href="#r指令" class="headerlink" title=":r指令"></a>:r指令</h2><p>:r 他的功能是将其他文件的内容读取到当前位置。</p><p><code>:r foo</code> 将文件 foo 中的内容插入到当前行</p><h2 id="bang指令"><a href="#bang指令" class="headerlink" title=":! bang指令"></a>:! bang指令</h2><p>！表示运行，他会运行后续的操作，然后将结果输出到当前内容。</p><p><code>1G!Gsort</code> 对全文进行排序整理</p><p>等同于<code>:1,$!sort</code> </p><h3 id="配合-fmt-或者-fold-工具"><a href="#配合-fmt-或者-fold-工具" class="headerlink" title="配合 fmt 或者 fold 工具"></a>配合 fmt 或者 fold 工具</h3><p><code>{!}fmt</code> 对当前段落重新格式化 reformat</p><h3 id="配合r指令-r"><a href="#配合r指令-r" class="headerlink" title="配合r指令 :r!"></a>配合r指令 :r!</h3><p><code>:r!</code> 和<code>!</code> 表示任何外部的工具或者过滤器都能被当成编辑器的插件来使用。例如，从数据库中拉取数据，或者使用 wget 或 lynx 命令从网站提取数据，又或者使用 ssh 指令从远程服务器获取数据</p><h2 id="so-source"><a href="#so-source" class="headerlink" title=":so (:source)"></a>:so (:source)</h2><p>​    <code>:so</code> 是 <code>:source</code> 的缩写形式，他用来读取包含一系列操作的外部文件。</p><p>用法是，<code>:source ~/.vimrc</code> 就可以从 .vimrc 中读取自定义的配置。</p><p>如果，现在我有一个宏指令文件，作用是统计单词数，在文件头部插入一个注释，显示文件的单词数，就可以使用<code>so</code> 来应用到其他文件。</p><p><code>vim +&#39;so mymacro.ex&#39; ./mytarget</code></p><p><code>+</code>在vim中 通常用来让vim从给定的行数开始编辑，这里借用来使用外部宏。</p><p><code>vi +&#39;/foo/d|wq!&#39; ~/.ssh/known_hosts</code> 从SSH的know_hosts中删除含有字符串foo的行</p><p>同过外加宏指令，可以配置Perl， AWK， sed来实现不同的操作。</p><h2 id="指令"><a href="#指令" class="headerlink" title="@指令"></a>@指令</h2><p><code>@</code> 是一个较少人使用的指令，他的功能是运行给定的命名寄存器中的指令。</p><p>比如说，我要用<code>:r!locate …</code> 来查找系统中的文件，然后获取文件名。</p><p>现在可以这么做：</p><ul><li><p><code>0i:r</code> 移动到行首，插入<code>:r</code> </p></li><li><p><code>&quot;cdd</code> 删除当前行，并存放到c寄存器</p></li><li><p><code>@c</code> 运行c寄存器中的指令</p><p>​</p></li></ul><h2 id="q指令"><a href="#q指令" class="headerlink" title="q指令"></a>q指令</h2><p>通过q来录制宏命令：</p><ul><li>第一次按下<code>q</code> 表示将要录制宏</li><li>接着按下任意字母，例如<code>c</code> ，表示宏指令存放在某个字母寄存器中(以c寄存器为例)</li><li>底部出现recording，表示正在录制，进行所需的宏操作</li><li>完成后，再次按<code>q</code> 退出</li></ul><p>配合上述的@指令</p><p><code>@c</code> 就可以多次运行存放在c寄存器中的宏指令</p><h1 id="参考链接-Resource"><a href="#参考链接-Resource" class="headerlink" title="参考链接 Resource"></a>参考链接 Resource</h1><ul><li><a href="http://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim" target="_blank" rel="external">what is your most productive shortcut within vim</a></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>​    如果想要用好vim，理解作者的设计思路是很重要的。希望通过这篇文章，更深刻的理解作者的哲思。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;透悉Vi-Grok-Vi&quot;&gt;&lt;a href=&quot;#透悉Vi-Grok-Vi&quot; class=&quot;headerlink&quot; title=&quot;透悉Vi Grok Vi&quot;&gt;&lt;/a&gt;透悉Vi Grok Vi&lt;/h1&gt;&lt;h2 id=&quot;引&quot;&gt;&lt;a href=&quot;#引&quot; class=&quot;he
      
    
    </summary>
    
      <category term="vim" scheme="https://blog.pervade.tech/categories/vim/"/>
    
    
      <category term="vim" scheme="https://blog.pervade.tech/tags/vim/"/>
    
      <category term="editor" scheme="https://blog.pervade.tech/tags/editor/"/>
    
  </entry>
  
</feed>
