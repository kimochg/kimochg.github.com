<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Database Relationship]]></title>
      <url>/2017/09/06/Database-Relationship/</url>
      <content type="html"><![CDATA[<h1 id="Assumption"><a href="#Assumption" class="headerlink" title="Assumption"></a>Assumption</h1><ol>
<li>Person</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rails g model person first_name last_name age:integer</div></pre></td></tr></table></figure>
<h1 id="One-to-One"><a href="#One-to-One" class="headerlink" title="One-to-One"></a>One-to-One</h1><p><img src="/media/15047418445837.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rails g model personal_info height:float weight:float person:references</div></pre></td></tr></table></figure>
<ul>
<li>One person has exactly <code>one</code> personal_info entry</li>
<li>One personal_info entry <code>belongs</code> to exactly one person</li>
<li>The <strong><em>belongs to</em></strong> side is the one with a <code>foreign key</code></li>
</ul>
<p><strong>Convention</strong>: Default name for the foreign key is <code>#{master_table_singular}_id</code>, e.g. person_id</p>
<h2 id="Relationship-in-model"><a href="#Relationship-in-model" class="headerlink" title="Relationship in model"></a>Relationship in model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PersonalInfo</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:person</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment"># personal_info.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h2><h3 id="Orphaned-associations-dependent"><a href="#Orphaned-associations-dependent" class="headerlink" title="Orphaned associations - dependent"></a>Orphaned associations - dependent</h3><ol>
<li><code>:delete</code> - remove associated object(s) by issuing a query</li>
<li><code>:destroy</code> - same as above, but remove the association by calling <code>destroy</code> on it</li>
<li><code>:nullify</code> - set the foreign key to NULL (leave the associated entity alone - just disassociate)</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Helper-methods"><a href="#Helper-methods" class="headerlink" title="Helper methods"></a>Helper methods</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">p = Person.find_by first_name: &quot;John&quot;</div><div class="line"></div><div class="line">p.personal_info</div><div class="line">=&gt; nil</div></pre></td></tr></table></figure>
<p>two way to new personal info for “John”</p>
<ul>
<li>create_personal_info</li>
<li>build_personal_info</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p.create_personal_info height: 170.1, weight: 70.5</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p.build_personal_info height: 170.1, weight: 70.5</div><div class="line">p.save</div></pre></td></tr></table></figure>
<h2 id="Brief"><a href="#Brief" class="headerlink" title="Brief"></a>Brief</h2><ul>
<li><code>has_one</code></li>
<li><code>belongs_to</code></li>
<li><code>create_personal_info</code></li>
<li><code>build_personal_info</code></li>
</ul>
<h1 id="One-to-Many"><a href="#One-to-Many" class="headerlink" title="One-to-Many"></a>One-to-Many</h1><p><img src="/media/15047419004111.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rails g model job title company position_id person:references</div></pre></td></tr></table></figure>
<ul>
<li>One person <code>has one or more</code> jobs</li>
<li>One job entry <code>belongs to</code> exactly one person</li>
<li>The <code>belongs to</code> side is the one with a foreign key</li>
</ul>
<p><strong>Convention</strong>: Default name for the foreign key is <code>#{master_table_singular}_id</code>, e.g. person_id</p>
<h2 id="Relationship-in-model-1"><a href="#Relationship-in-model-1" class="headerlink" title="Relationship in model"></a>Relationship in model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment"># job.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Job</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:person</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Options-1"><a href="#Options-1" class="headerlink" title="Options"></a>Options</h2><h3 id="class-name"><a href="#class-name" class="headerlink" title="class_name"></a>class_name</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line">  has_many <span class="symbol">:my_jobs</span>, <span class="symbol">class_name:</span> <span class="string">"Job"</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>alias the name and point out the model name</p>
<h3 id="Orphaned-associations-dependent-1"><a href="#Orphaned-associations-dependent-1" class="headerlink" title="Orphaned associations - dependent"></a>Orphaned associations - dependent</h3><ol>
<li><code>:delete</code> - remove associated object(s) by issuing a query</li>
<li><code>:destroy</code> - same as above, but remove the association by calling <code>destroy</code> on it</li>
<li><code>:nullify</code> - set the foreign key to NULL (leave the associated entity alone - just disassociate)</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Helper-methods-1"><a href="#Helper-methods-1" class="headerlink" title="Helper methods"></a>Helper methods</h2><h3 id="lt-lt"><a href="#lt-lt" class="headerlink" title="&lt;&lt;"></a>&lt;&lt;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">Job.create company: &quot;MS&quot;, title: &quot;Developer&quot;, position_id: &quot;#1234&quot;</div><div class="line">p1 = Person.first</div><div class="line">p1.jobs</div><div class="line">=&gt; nil</div><div class="line"></div><div class="line">p1.jobs &lt;&lt; Job.first</div><div class="line"></div><div class="line">Job.first.person</div><div class="line">=&gt; #&lt;Person ...</div></pre></td></tr></table></figure>
<h3 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p1.jobs.clear</div></pre></td></tr></table></figure>
<p>disassociates jobs from this person by setting foreign key to NULL</p>
<h3 id="create-and-where-scoped-to-person"><a href="#create-and-where-scoped-to-person" class="headerlink" title="create and where scoped to person!"></a>create and where scoped to person!</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p1.jobs.create [</div><div class="line">  &#123; title: &quot;dev&quot;, company: &quot;MS&quot;, position_id: &quot;#123123&quot; &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p1.jobs.where(company: &quot;MS&quot;).count</div></pre></td></tr></table></figure>
<p>remember it is also helpful in migrations</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Person.first.create! [</div><div class="line">]</div></pre></td></tr></table></figure>
<h2 id="Brief-1"><a href="#Brief-1" class="headerlink" title="Brief"></a>Brief</h2><ul>
<li><code>has_many</code></li>
<li><code>belongs_to</code></li>
<li><code>dependent</code></li>
<li><code>clear</code></li>
<li><code>create</code></li>
<li><code>where</code></li>
</ul>
<h1 id="Many-to-Many"><a href="#Many-to-Many" class="headerlink" title="Many-to-Many"></a>Many-to-Many</h1><p><img src="/media/15047419254688.jpg" alt=""></p>
<ul>
<li>One person can <code>have many</code> hobbies</li>
<li>One hobby can be <code>shared by many</code> people</li>
<li><code>habtm</code> (has_and_belongs_to_many)</li>
</ul>
<p>Need to create an extra (a.k.a join) table (without a model, i.e. just a migration)</p>
<p><strong>Convention</strong>: <strong><em>Plural</em></strong> model names separated by an underscore in <strong><em>alphabetical</em></strong> order</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rails g model hobby name</div><div class="line">rails g migration create_hobbies_people person:references hobby:references</div></pre></td></tr></table></figure>
<p>Hobbies_People &lt;- plural &amp;&amp; alphabetical order</p>
<h2 id="Migration-join-table"><a href="#Migration-join-table" class="headerlink" title="Migration - join table"></a>Migration - join table</h2><p>The Many-to-Many associated with <strong>2</strong> model and <strong>3</strong> migrations</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateHobbiesPeople</span> &lt; ActiveRecord::Migration</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></div><div class="line">    create_table <span class="symbol">:hobbies_people</span>, <span class="symbol">id:</span> <span class="literal">false</span> <span class="keyword">do</span> <span class="params">|t|</span></div><div class="line">      t.references <span class="symbol">:person</span>, <span class="symbol">index:</span> <span class="literal">true</span>, <span class="symbol">foreign_key:</span> <span class="literal">true</span></div><div class="line">      t.references <span class="symbol">:hobby</span>, <span class="symbol">index:</span> <span class="literal">true</span>, <span class="symbol">foreign_key:</span> <span class="literal">true</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>Since we don’t need primary id in join tables, so set <code>id: false</code></p>
<h2 id="Relationship-in-model-2"><a href="#Relationship-in-model-2" class="headerlink" title="Relationship in model"></a>Relationship in model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line">  has_and_belongs_to_many <span class="symbol">:hobbies</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># hobby.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hobby</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_and_belongs_to_many <span class="symbol">:people</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Helper-method"><a href="#Helper-method" class="headerlink" title="Helper method"></a>Helper method</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">josh = Person.find_by first_name: &quot;Josh&quot;</div><div class="line">=&gt; #&lt;Person ...</div><div class="line"></div><div class="line">lebron = Person.find_by first_name: &quot;Lebron&quot;</div><div class="line">=&gt; #&lt;Person ...</div><div class="line"></div><div class="line">programming = Hobby.create name: &quot;Programming&quot;</div><div class="line">=&gt; #&lt;Hobby ...</div><div class="line"></div><div class="line">josh.hobbies &lt;&lt; programming; lebron.hobbies &lt;&lt; programming</div><div class="line"></div><div class="line">programming.people</div><div class="line">=&gt; # ... Collection [ ... josh and lebron ... ]</div></pre></td></tr></table></figure>
<h2 id="Brief-2"><a href="#Brief-2" class="headerlink" title="Brief"></a>Brief</h2><ul>
<li><code>has_and_belongs_to</code></li>
<li>2 model and 3 migrations, join table only exists in the DB, but not in Ruby code</li>
</ul>
<h1 id="Rich-Many-to-Many"><a href="#Rich-Many-to-Many" class="headerlink" title="Rich Many-to-Many"></a>Rich Many-to-Many</h1><p><img src="/media/15047419465451.jpg" alt=""></p>
<ul>
<li>keep some data on the join table</li>
<li><code>grandchild</code> relationship on a model, user -&gt; articles -&gt; comments</li>
<li>in our case, all salary ranges for a particular person</li>
</ul>
<h2 id="Basic-Idea"><a href="#Basic-Idea" class="headerlink" title="Basic Idea"></a>Basic Idea</h2><p>you first <code>create</code> and <code>regular</code> parent-child relationship and then <code>use the child model as a join</code> between the parent and grandchild</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rails g model salary_range min_salary:float max_salary:float job:references</div><div class="line"></div><div class="line">rake db:migrate</div></pre></td></tr></table></figure>
<h2 id="Relationship-in-model-3"><a href="#Relationship-in-model-3" class="headerlink" title="Relationship in model"></a>Relationship in model</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># job.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Job</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:person</span></div><div class="line">  has_one <span class="symbol">:salary_range</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment"># salary_range.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SalaryRange</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:job</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p><code>person</code> is grandparent to <code>salary_range</code></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># person.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line">  has_and_belongs_to_many <span class="symbol">:hobbies</span></div><div class="line">  has_many <span class="symbol">:approx_salary</span>, <span class="symbol">through:</span> <span class="symbol">:jobs</span>, <span class="symbol">source:</span> <span class="symbol">:salary_range</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Helper-methods-2"><a href="#Helper-methods-2" class="headerlink" title="Helper methods"></a>Helper methods</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">lebron = Person.find_by(first_name: &quot;LeBron&quot;)</div><div class="line">=&gt; #&lt;Person ...</div><div class="line"></div><div class="line">lebron.jobs.count</div><div class="line">=&gt; 2</div><div class="line"></div><div class="line">lebron.jobs.pluck(:id)</div><div class="line">=&gt; [12, 13]</div><div class="line"></div><div class="line">Job.find(12).create_salary_range(min_salary: 10000.00, max_salary: 20000.00)</div><div class="line">=&gt; #&lt;SalaryRange id: 1 ...</div><div class="line"></div><div class="line">Job.find(13).create_salary_range(min_salary: 15000.00, max_salary: 35000.00)</div><div class="line">=&gt; #&lt;SalaryRange id: 2 ...</div><div class="line"></div><div class="line">lebron.approx_salaries</div><div class="line">=&gt; ... Collection ... [ #&lt;SalaryRange id: 1 ... , #&lt;SalaryRange id: 2 ... ]</div></pre></td></tr></table></figure>
<h3 id="Calculations"><a href="#Calculations" class="headerlink" title="Calculations"></a>Calculations</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_one <span class="symbol">:personal_info</span></div><div class="line">  has_many <span class="symbol">:jobs</span></div><div class="line">  has_and_belongs_to_many <span class="symbol">:hobbies</span></div><div class="line">  has_many <span class="symbol">:approx_salaries</span>, <span class="symbol">through:</span> <span class="symbol">:jobs</span>, <span class="symbol">source:</span> <span class="symbol">:salary_range</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">max_salary</span></span></div><div class="line">    approx_salaries.maximum(<span class="symbol">:max_salary</span>)</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rails c</div><div class="line"></div><div class="line">lebron = Person.find_by first_name: &quot;Lebron&quot;</div><div class="line"></div><div class="line">lebron.max_salary</div><div class="line">=&gt; 350000.00</div></pre></td></tr></table></figure>
<p>More infos on <a href="http://api.rubyonrails.org/classes/ActiveRecord/Calculations.html" target="_blank" rel="external">http://api.rubyonrails.org/classes/ActiveRecord/Calculations.html</a></p>
<h1 id="Brief-3"><a href="#Brief-3" class="headerlink" title="Brief"></a>Brief</h1><ul>
<li><code>though</code></li>
<li><code>source</code></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Note </tag>
            
            <tag> Rails </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hello world]]></title>
      <url>/2017/09/06/hello-world/</url>
      <content type="html"><![CDATA[<p>Awesome! This is my first article in Hexo !</p>
]]></content>
      
        
    </entry>
    
  
  
    
  
</search>
